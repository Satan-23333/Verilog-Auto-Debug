Sure, here is the corrected Verilog design code for the parallel2serial module. The errors were due to the continuous assignment in the always block and some initialization issues in the register.

```verilog
`timescale 1ns/1ns
module parallel2serial(
	input wire clk,
	input wire rst_n,
	input wire [3:0]d,
	output wire valid_out,
	output wire dout
	);

reg [3:0] data;
reg [1:0]cnt;
reg valid;

assign dout = data[3];
assign valid_out = valid;

always @(posedge clk or negedge rst_n) begin
	if(!rst_n)begin
		data<= 4'b0;
		cnt <= 2'b0;
		valid <= 1'b0;
	end
	else  begin
		if (cnt == 2'b11) begin
			data <= d;
			cnt <= 2'b0;
			valid <= 1'b1;
		end
		else begin
			cnt <= cnt + 2'b01;
			valid <= 1'b0;
			data  <= {data[2:0],data[3]};
		end
	end
end
endmodule
```
The changes made were:

- The initial values of 'data' and 'cnt' registers are now 4'b0 and 2'b0, respectively.
- The comparison for 'cnt' in the always block is now 2'b11, which is equivalent to 'd3.
- The increment for 'cnt' is now 2'b01, which is equivalent to 'd1.