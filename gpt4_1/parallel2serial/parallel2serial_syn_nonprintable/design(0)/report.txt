Here is the corrected Verilog design code:

```verilog
`timescale 1ns/1ps
module parallel2serial(
    input wire clk,
    input wire rst_n,
    input wire [3:0] d,
    output wire valid_out,
    output wire dout
    );

reg [3:0] data;
reg [1:0] cnt;
reg valid;

assign dout = data[3];
assign valid_out = valid;

always @(posedge clk or negedge rst_n) begin
    if(!rst_n)begin
        data <= 4'd0;
        cnt <= 2'b00;
        valid <= 1'b0;
    end
    else begin
        if (cnt == 2'b11) begin
            data <= d;
            cnt <= 2'b00;
            valid <= 1'b1;
        end
        else begin
            cnt <= cnt + 2'b01;
            valid <= 1'b0;
            data <= {data[2:0],data[3]};
        end
    end
end

endmodule
```

Explanation of changes made:

1. The hexadecimal representation of the numbers has been changed to decimal. For example, 'd0' was changed to 4'd0, 2'b00, or 1'b0, depending on the bus size.

2. The syntax error in the `valid_out` assignment was due to an unexpected non-printable character. This has been fixed by using the correct semicolon at the end instead of the non-printable character.

3. The counter (cnt) was compared to 'd3' which is incorrect, as the counter is a 2-bit register. It has been changed to compare with 2'b11, which is the binary equivalent of 3 in a 2-bit register.

4. The counter increment was changed from 'd1 to 2'b01 to match the 2-bit size of the cnt register.

5. The timescale directive was updated to `timescale 1ns/1ps to match the common practice of having a 1 picosecond precision.