Sure, the error message in your compile report is indicating that you are trying to assign a value to a 'reg' type variable in a continuous assignment statement. 'reg' type variables in Verilog should be assigned values in procedural blocks only (like always, initial blocks etc.). For continuous assignments, we should use 'wire' type variables. 

Here is the corrected code:

```verilog
module adder_8bit(
    input [7:0] a, b, 
    input cin, 
    output wire [7:0] sum, 
    output wire cout);

    wire [7:0] c;

    full_adder FA0 (.a(a[0]), .b(b[0]), .cin(cin), .sum(sum[0]), .cout(c[0]));
    full_adder FA1 (.a(a[1]), .b(b[1]), .cin(c[0]), .sum(sum[1]), .cout(c[1]));
    full_adder FA2 (.a(a[2]), .b(b[2]), .cin(c[1]), .sum(sum[2]), .cout(c[2]));
    full_adder FA3 (.a(a[3]), .b(b[3]), .cin(c[2]), .sum(sum[3]), .cout(c[3]));
    full_adder FA4 (.a(a[4]), .b(b[4]), .cin(c[3]), .sum(sum[4]), .cout(c[4]));
    full_adder FA5 (.a(a[5]), .b(b[5]), .cin(c[4]), .sum(sum[5]), .cout(c[5]));
    full_adder FA6 (.a(a[6]), .b(b[6]), .cin(c[5]), .sum(sum[6]), .cout(c[6]));
    full_adder FA7 (.a(a[7]), .b(b[7]), .cin(c[6]), .sum(sum[7]), .cout(c[7]));

    assign cout = c[7]; 
endmodule

module full_adder (input a, b, cin, output sum, cout);
    assign {cout, sum} = a + b + cin;
endmodule
```

In this corrected design, the sum and cout port in the adder_8bit module have been changed from 'reg' to 'wire'. Thus, the error in the continuous assignment statement has been eliminated.